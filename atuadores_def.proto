
//Intelligent Room System
syntax = "proto3";

// Sprinkler
service Sprinkler {
   rpc Notify (Temperature) returns (SprinklerReply) {}
   rpc ActivateAlarm (Void) returns (SprinklerReply) {}
   rpc DeactivateAlarm (Void) returns (SprinklerReply) {}
}

message Temperature {
  int32 value = 1;
}

message SprinklerReply {
  bool state = 1;
  bool manual_action = 2;
}

// Lamp
service Lamp {
   rpc Notify (Lightness) returns (LampReply) {}
   rpc TurnOn (Void) returns (LampReply) {}
   rpc TurnOff (Void) returns (LampReply) {}
   rpc ChangeColor (Color) returns (LampReply) {}
}

message Lightness {
  float value = 1;
}

message LampReply {
  bool is_on = 1;
  bool manual_action = 2;
  Color color = 3;
}

message Color {
  string color = 1;
}

// RetractableRoof
service RetractableRoof {
   rpc Notify (RainPresence) returns (RetractableRoofReply) {}
   rpc Open (Void) returns (RetractableRoofReply) {}
   rpc Close (Void) returns (RetractableRoofReply) {}
}

message RainPresence {
  bool value = 1;
}

message RetractableRoofReply {
  bool is_open = 1;
}


service HomeAssistant {
   rpc ListActuators (Void) returns (Actuators) {}
   rpc ListSensors (Void) returns (Sensors) {}
   rpc CallMethod (RemoteCallParams) returns (Void) {}
}


message RemoteCallParams {
  int32 actuator = 1;
  int32 method = 2;
  repeated string args = 3;       
}

message Actuators {

  SprinklerReply sprinkler = 1;
  RetractableRoofReply roof = 2;
  LampReply lamp = 3;

}

message Sensors {

  Temperature temperature = 1;
  Lightness lightness = 2;
  RainPresence rain_presence = 3;

}


message Void {

}
//To build this file
//python3 -m grpc_tools.protoc -I. --python_out=. --grpc_python_out=. atuadores_def.proto

// string id_obj = 1;
//   oneof obj {
//       Lamp objL = 2;
//       Treadmill objT = 3;
//       AC objA = 4;
//   }

